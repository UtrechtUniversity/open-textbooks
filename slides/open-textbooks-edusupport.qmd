---
title: "Open textbooks with Quarto and GitHub"
subtitle: "Workshop for Education Support colleagues at the UU library"
title-slide-attributes: 
  data-background-color: "#FFCD00"
author: "RDM Support"
format: 
        revealjs: 
                footer: "Open textbooks for EduSupport @ UU"
                embed-resources: true
                incremental: true
                slide-number: true
                center-title-slide: true
                progress: true
---

## Content

-   Introducing R, RStudio, and Quarto
-   Basic set-up and GitHub publication of a Quarto book
-   â˜• BREAK
-   Text editing in Markdown
-   The git workflow
-   â˜• BREAK
-   Interactivity options (demo)
-   Publishing and archiving

# R, RStudio and Quarto

## R and RStudio

::: columns
::: {.column width="50%"}
![](img/rlogo.png){alt="R logo" width="50%"}

Programming language
:::

::: {.column width="50%"}
![](img/rstudiologo.png){alt="RStudio logo"}

Pretty interface to interact with R\
(and git, and Quarto)
:::
:::

## The Rstudio interface

![](img/rstudio-incremental-5.png)

## Quarto

> "An open-source scientific and technical publishing system"

-   Turn text documents (`.qmd`) into html, pdf, epub, docx and more.

    *Today*: ðŸ’» html (documents that can be hosted on the web)

-   Books ðŸ“–, but also: slides, blogs, articles, websites, and more.

## Quarto: some history

-   Quarto = more extensive version of **R markdown**.

-   Rmarkdown: make science more reproducible.

-   Document (`.Rmd`) containing both R code (R) and text (markdown).

-   When rendering an R markdown document, all code gets executed as well.

-   Same for Quarto!

    *But: more features + more recent than R markdown*

## Basic set-up of a book

**ðŸ’ª Let's get to work!**

Follow the steps here:

<https://utrechtuniversity.github.io/open-textbooks/get-started.html>

## What did we just do?

::: columns
::: {.column width="30%"}
![*KIOfficialArt, CC BY SA 3.0*](https://images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com/f/0cd82ff4-fa94-4020-9a16-f41089efc593/ddy9ni2-12582af3-e887-4ff9-b755-69f13240fbd1.png/v1/fit/w_828,h_1566/dora__dora_the_explorer__kicreate_by_kiofficialart_ddy9ni2-414w-2x.png?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1cm46YXBwOjdlMGQxODg5ODIyNjQzNzNhNWYwZDQxNWVhMGQyNmUwIiwiaXNzIjoidXJuOmFwcDo3ZTBkMTg4OTgyMjY0MzczYTVmMGQ0MTVlYTBkMjZlMCIsIm9iaiI6W1t7ImhlaWdodCI6Ijw9MjQyMiIsInBhdGgiOiJcL2ZcLzBjZDgyZmY0LWZhOTQtNDAyMC05YTE2LWY0MTA4OWVmYzU5M1wvZGR5OW5pMi0xMjU4MmFmMy1lODg3LTRmZjktYjc1NS02OWYxMzI0MGZiZDEucG5nIiwid2lkdGgiOiI8PTEyODAifV1dLCJhdWQiOlsidXJuOnNlcnZpY2U6aW1hZ2Uub3BlcmF0aW9ucyJdfQ.M0r7r1e0UNlagdenqQ8RxCjfRlzxVaxy-h8Sew2U-Xs){#dora fig-alt="Dora the explorer" width="264"}
:::

::: {.column width="70%"}
1.  Create a Quarto Book project in RStudio

2.  Render the Book to html

3.  Turn the project folder into a git repository (more later!)

4.  Upload ("push") the project files to GitHub

5.  Turn on GitHub pages to publish the html files online
:::
:::

## EX: Make a change and publish it {.smaller}

For example:

-   Open the `_quarto.yml` file and change the title or authors

-   Change or remove some text from one of the chapters

Remember, to upload a change to GitHub:

1.  `git add yourfilewithchanges` (select which files to make a snapshot of)
2.  `git commit -m "Make x change"` (create the snapshot with message)
3.  `git push` (upload to GitHub)

# â˜• BREAK 1 {background-image="https://upload.wikimedia.org/wikipedia/commons/1/10/Ireland_%28Unsplash_TD4DBagg2wE%29.jpg"}

# Markdown and git

## Markdown

> Markdown is a lightweight markup language that you can use to add formatting elements to plaintext text documents. - [*Markdown Guide*](https://www.markdownguide.org/getting-started/)

. . .

-   Agnostic way of formatting text.
-   Can be automatically converted to specific outputs, such as html, pdf, etc.
-   Type literally, or use [Visual Editor mode](https://quarto.org/docs/visual-editor/)!

## A few examples {.smaller}

+-----------------------------------+-------------------------------+
| Markdown Syntax                   | Output                        |
+===================================+===============================+
| ```                               | *italics* and **bold**        |
| *italics* and **bold**            |                               |
| ```                               |                               |
+-----------------------------------+-------------------------------+
| ```                               | superscript^2^ / subscript~2~ |
| superscript^2^ / subscript~2~     |                               |
| ```                               |                               |
+-----------------------------------+-------------------------------+
| ```                               | `verbatim code`               |
| `verbatim code`                   |                               |
| ```                               |                               |
+-----------------------------------+-------------------------------+
| ```                               | # First-level header          |
| # First-level header              |                               |
| ```                               |                               |
+-----------------------------------+-------------------------------+
| ```                               | ## Second-level header        |
| ## Second-level header            |                               |
| ```                               |                               |
+-----------------------------------+-------------------------------+

## Lists and links {.smaller}

::: nonincremental
::: columns
::: {.column width="50%"}
``` markdown
* unordered list
  + sub-item 1
    - sub-sub-item 1
  + sub-item 2
```
:::

::: {.column width="50%"}
-   unordered list
    -   sub-item 1
        -   sub-sub-item 1
    -   sub-item 2
:::
:::
:::

. . .

::: nonincremental
::: columns
::: {.column width="50%"}
``` markdown
1. ordered list
2. item 2
   i. sub-item 1
      A.  sub-sub-item 1
```
:::

::: {.column width="50%"}
1.  ordered list
2.  item 2
    i.  sub-item 1
        A.  sub-sub-item 1
:::
:::
:::

. . .

::: nonincremental
::: columns
::: {.column width="50%"}
``` markdown

Here's a 
[named hyperlink](https://quarto.org/)
```
:::

::: {.column width="50%"}
Here's a [named hyperlink](https://quarto.org/)
:::
:::
:::

. . .

::: nonincremental
::: columns
::: {.column width="50%"}
``` markdown

Clickable url: <https://quarto.org/>
```
:::

::: {.column width="50%"}
Clickable url: <https://quarto.org/>
:::
:::
:::

## EX: Markdown tutorial

Do the first 3 exercises of the Markdown tutorial on\
<https://www.markdowntutorial.com/>\
(italics/bold, headers, hyperlinks)

## Embed multimedia {.smaller}

::: columns
::: {.column width="50%"}
``` markdown
Embed an image: 
![penguins](https://allisonhorst.github.io/palmerpenguins/reference/figures/lter_penguins.png)
```
:::

::: {.column width="50%"}
Embed an image: <br> ![penguins](https://allisonhorst.github.io/palmerpenguins/reference/figures/lter_penguins.png)
:::
:::

. . .

::: columns
::: {.column width="50%"}
``` {.markdown shortcodes="false"}
Embed a video in Quarto:
{{< video https://www.youtube.com/embed/wo9vZccmqwc >}}
```

See also [Quarto documentation for videos](https://quarto.org/docs/authoring/videos.html)
:::

::: {.column width="50%"}
Embed a video in Quarto: <br> {{< video https://www.youtube.com/embed/wo9vZccmqwc >}}
:::
:::

## EX: Embed an image or video

Find an image or video and embed it in one of the chapters of your book! ðŸ“–

## Git and GitHub {.smaller}

::: columns
::: {.column width="50%"}
![](https://git-scm.com/images/logos/downloads/Git-Logo-2Color.png){fig-alt="Git logo" height="120"}

-   Version control software
-   Versions of a file are stored as "commits" that can be reverted
-   Not necessarily online, can be on your personal laptop
:::

::: {.column width="50%"}
![](https://cdn-icons-png.flaticon.com/512/25/25231.png){fig-alt="GitHub logo" height="120"}

-   Website to store git-tracked files
-   Collaborate on files and make suggestions for improvement
-   Also allows hosting html files online (GitHub Pages)
:::
:::

## Git workflow (in your terminal)

1.  **Pull**: Get latest changes from GitHub:

    ``` bash
    git pull
    ```

2.  Make change in file on your PC

3.  **Stage**: Tell git that you are planning to incorporate the file in your next snapshot:

    ``` bash
    git add "your-file-to-stage"
    ```

4.  **Commit**: Tell git to take the snapshot:

    ``` bash
    git commit -m "Make change x"
    ```

5.  **Push**: Upload the changes to GitHub:

    ``` bash
    git push
    ```

## Status, history, reverting

"What has been edited and staged?"

``` bash
git status
```

. . .

"What has been previously committed?"

``` bash
git log
```

. . .

"UNDO, UNDO, UNDO!"

``` bash
# Undo staging
git reset yourstagedfile

# Undo last commit
git revert HEAD
```

# â˜• BREAK 2 {background-image="https://upload.wikimedia.org/wikipedia/commons/1/10/Ireland_%28Unsplash_TD4DBagg2wE%29.jpg"}

## Interactivity: embed H5P

1.  Find H5P content
2.  Click "Embed \<\>"
3.  Copy-paste code into qmd file
4.  Render!

## Interactivity: webexercises

With the `{webexercises}` R package!

1.  Install + load R package

    ````         
     ```{{r}}
     install.packages("webexercises")
     library(webexercises)
     ```
    ````

2.  Add to Quarto

    ``` r
     add_to_quarto()
    ```

3.  [Use exercises](https://psyteachr.github.io/webexercises/articles/webexercises.html#fill-in-the-blanks)

## Publishing and archiving

Finished (a full version of) the book? **Archive it!**

1. [Create an ORCID](https://orcid.org/register)
2. Log into Zenodo (or [Zenodo Sandbox](https://sandbox.zenodo.org/))
3. [Link your Zenodo account](https://help.zenodo.org/docs/profile/linking-accounts/) to ORCID Ã¡nd GitHub account
4. In Zenodo, go to [Settings > GitHub](https://sandbox.zenodo.org/account/settings/github/), and "Flip the switch" of your to-be-archived repository.
5. In GitHub, create a [Release](https://docs.github.com/en/repositories/releasing-projects-on-github/managing-releases-in-a-repository).
6. Published! If needed, edit the Zenodo metadata.

Steps are outlined [here with screenshots](https://coderefinery.github.io/github-without-command-line/doi/)

# Thanks!
