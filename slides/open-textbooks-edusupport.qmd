---
title: "Open textbooks with Quarto and GitHub"
description: "Workshop for Education Support colleagues at the UU library"
title-slide-attributes: 
  data-background-color: "#FFCD00"
author:
  - Dorien Huijser
  - Neha Moopen
  - Kim Deckers
date: 2024-05-16
format: 
        revealjs: 
                logo:  https://utrechtuniversity.github.io/dataprivacyhandbook/img/UU_logo_2021_EN_RGB.png
                footer: "Open textbooks for EduSupport @ UU"
                theme: uu.scss
                embed-resources: true
                slide-number: true
                center-title-slide: true
                progress: true
                mermaid: 
                  security-level: loose
---

## Content

-   Introducing R, RStudio, and Quarto
-   Our very first Quarto book
-   ‚òï BREAK
-   The git workflow
-   Host book on GitHub pages
-   ‚òï BREAK
-   Interactivity options (demo)
-   Publishing and archiving

# R, RStudio and Quarto

## R and RStudio

::: columns
::: {.column width="50%"}
![](img/rlogo.png){alt="R logo" width="50%"}

Programming language
:::

::: {.column width="50%"}
![](img/rstudiologo.png){alt="RStudio logo"}

Pretty interface to interact with R
(and git, and Quarto)
:::
:::

## The Rstudio interface

![](img/rstudio-incremental-5.png)

::: notes
Why do we use R and RStudio? It is perfectly possible to create a Quarto book with another text editor. We choose Rstudio here because:

-   It has a nice interface, with a visual editing mode.
-   It integrates nicely with git, and allows working with git with buttons instead of only lines of code.
-   We are most familiar with R ourselves, as are many researchers.
:::

## Quarto

> "An open-source scientific and technical publishing system"

-   Documents with text **and** code (R, Python, bash, etc.).

-   Turn text documents (`.qmd`) into html, pdf, epub, docx and more. Code is automatically executed.

    *Today*: üíª html (documents that can be hosted on the web)

-   Many output types: book, slides, blog, article, website, etc.

    *Today*: üìñ book

## Our first Quarto book

::: columns
::: {.column width="20%"}
![*KIOfficialArt, CC BY SA 3.0*](https://images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com/f/0cd82ff4-fa94-4020-9a16-f41089efc593/ddy9ni2-12582af3-e887-4ff9-b755-69f13240fbd1.png/v1/fit/w_828,h_1566/dora__dora_the_explorer__kicreate_by_kiofficialart_ddy9ni2-414w-2x.png?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1cm46YXBwOjdlMGQxODg5ODIyNjQzNzNhNWYwZDQxNWVhMGQyNmUwIiwiaXNzIjoidXJuOmFwcDo3ZTBkMTg4OTgyMjY0MzczYTVmMGQ0MTVlYTBkMjZlMCIsIm9iaiI6W1t7ImhlaWdodCI6Ijw9MjQyMiIsInBhdGgiOiJcL2ZcLzBjZDgyZmY0LWZhOTQtNDAyMC05YTE2LWY0MTA4OWVmYzU5M1wvZGR5OW5pMi0xMjU4MmFmMy1lODg3LTRmZjktYjc1NS02OWYxMzI0MGZiZDEucG5nIiwid2lkdGgiOiI8PTEyODAifV1dLCJhdWQiOlsidXJuOnNlcnZpY2U6aW1hZ2Uub3BlcmF0aW9ucyJdfQ.M0r7r1e0UNlagdenqQ8RxCjfRlzxVaxy-h8Sew2U-Xs){#dora fig-alt="Dora the explorer" width="264"}
:::

::: {.column width="70%"}
Follow the steps here:

<https://quarto.org/docs/books/#quick-start>
:::
:::

## Files

-   `_quarto.yml`: settings
-   `index.qmd`: title page/homepage
-   `[chapters].qmd`: other book chapters
-   `references.bib`: references to be used in the book
-   `cover.png`: book cover image

## Markdown

In your chapters, you write in **Markdown**

> Markdown is a lightweight markup language that you can use to add formatting elements to plaintext text documents. - [*Markdown Guide*](https://www.markdownguide.org/getting-started/)

. . .

- Agnostic way of formatting text.
- Can be automatically converted to specific outputs, such as html, pdf, etc.
- Type literally, or use [Visual Editor mode](https://quarto.org/docs/visual-editor/)!

See <https://www.markdownguide.org/cheat-sheet/>

## Embed multimedia {.smaller}

::: columns
::: {.column width="50%"}
``` markdown
Embed an image: 
![penguins](https://allisonhorst.github.io/palmerpenguins/reference/figures/lter_penguins.png)
```
:::

::: {.column width="50%"}
Embed an image: <br> ![penguins](https://allisonhorst.github.io/palmerpenguins/reference/figures/lter_penguins.png)
:::
:::

. . .

::: columns
::: {.column width="50%"}
``` {.markdown shortcodes="false"}
Embed a video in Quarto:
{{< video https://www.youtube.com/embed/wo9vZccmqwc >}}
```

See also [Quarto documentation for videos](https://quarto.org/docs/authoring/videos.html)
:::

::: {.column width="50%"}
Embed a video in Quarto: <br> {{< video https://www.youtube.com/embed/wo9vZccmqwc >}}
:::
:::

## ‚úçÔ∏è Make a change in your book

1. **In the `_quarto.yml` file:**
    a. Change the title and authors 
    b. Add to the `_quarto.yml`:
      
      ```{.yaml code-line-numbers="3"}
      project:
        type: book
        output-dir: docs
      ```
      
2. **In one of your chapters:**
    a. Format some text
    b. Embed an image or video of your choice
3. **Render your book!**

# ‚òï BREAK 1 {background-image="https://images.pexels.com/photos/1695052/pexels-photo-1695052.jpeg" background-color="black"}

# The git workflow

## Git and GitHub {.smaller}

::: columns
::: {.column width="50%"}
![](https://git-scm.com/images/logos/downloads/Git-Logo-2Color.png){fig-alt="Git logo" height="120"}

-   Version control software
-   Versions of a file are stored as "commits" that can be reverted
-   Not necessarily online, can be on your personal laptop
:::

::: {.column width="50%"}
![](https://cdn-icons-png.flaticon.com/512/25/25231.png){fig-alt="GitHub logo" height="120"}

-   Website to store git-tracked files
-   Collaborate on files and make suggestions for improvement
-   Also allows hosting html files online (GitHub Pages)
:::
:::

## Git workflow

```{mermaid}
flowchart LR
  A(fa:fa-pencil <b>Make change</b><br><i>Collect to be sent items</i><br><img src="https://images.pexels.com/photos/6068969/pexels-photo-6068969.jpeg"/>) --> B
  B(fa:fa-archive <b>Stage</b><br><i>Put in package</i><br><img src="https://live.staticflickr.com/1560/25069988352_98dd8f1c8d_b.jpg"/><br><code>git add your-edited-file</code>) --> C
  C(fa:fa-tag <b>Commit</b><br><i>Add packaging label</i><br><img src="https://live.staticflickr.com/65535/52177106715_98e603fdf5_b.jpg"/><br><code>git commit -m 'made x update'</code>) --> D
  D(fa:fa-paper-plane <b>Push</b><br><i>Send package</i><br><img src="https://upload.wikimedia.org/wikipedia/commons/2/22/PostNL_Pakket-_en_briefautomaat%2C_Almere_%282020%29_04.jpg"/><br><code>git push</code>)
```

## ‚úçÔ∏è Practice the git workflow

Do this once (together):

1. In RStudio Terminal, type `git init` > ENTER
2. Commit all changes:
    
    ```bash
    git add -A .
    git commit -m "Initialize Quarto book"
    ```

. . .

Now practice (by yourself):

1. Make a change in one of your chapters
2. Add + commit the change

## ‚úçÔ∏è Put the Quarto book on GitHub {.smaller}

1. Go to <https://github.com/> and log into your account
2. Create a new GitHub repository 
    a. Use same name as your local Quarto book
    b. Initialize *without* README
3. Connect your local git repository to the GitHub repository
    a. On GitHub, look for "...or push an existing repository from the command line"
    b. Copy the code into your RStudio Terminal > ENTER
4. In RStudio, push all changes to GitHub:
    
    ```bash
    git push
    ```
    
5. Refresh GitHub page: your files are now here!

See also <https://utrechtuniversity.github.io/open-textbooks/get-started.html#make-your-project-a-git-repository>

## ‚úçÔ∏è Put the book on GitHub pages {.smaller}

In the GitHub repository, go to:

1. Settings
2. "Code and automation" > "Pages".
3. "Build and deployment‚Äù
    a. Source: Deploy from a branch
    b. Branch: main
    c. Select folder: /docs
4. Wait for a bit
5. Navigate to <https://yourusername.github.io/yourrepositoryname>

Now, every time you push to GitHub, your edits will come on the website!

## Bonus: Status, history, reverting

"What has been edited and staged?"

``` bash
git status
```

. . .

"What has been changed in this file?"

```bash
git diff your-file
```

. . .

"What has been previously committed?"

``` bash
git log
```

. . .

"UNDO, UNDO, UNDO!"

``` bash
# Undo staging
git reset yourstagedfile

# Undo last commit
git revert HEAD
```

# ‚òï BREAK 2 {background-image="https://images.pexels.com/photos/1695052/pexels-photo-1695052.jpeg" background-color="black"}

## Interactivity

[Possibilities discovered so far](https://utrechtuniversity.github.io/open-textbooks/interactivity.html):

- Images, videos, diagrams
- Embed (public) H5P content
- Simple exercises with `{webexercises}` R package
- Tabsets to split content
- Dropdowns to hide content (html)
- Glossary with `{glossary}` R package
- Discussions for book chapters

## ‚úçÔ∏è Documenting the book

Add in the GitHub repository:

- README.md
- LICENSE.md (e.g., CC BY 4.0): [instructions Code Refinery](https://coderefinery.github.io/github-without-command-line/creating-using-web/#step-7-optional-adding-a-license-to-an-existing-repository)
- Citation file (CFF): <https://citation-file-format.github.io/cff-initializer-javascript/>

If you add these directly in GitHub, also Pull your changes to your local folder!

```bash
git pull
```

## ‚úçÔ∏è Archiving the book

1.  Log into Zenodo (or [Zenodo Sandbox](https://sandbox.zenodo.org/))
2.  [Link your Zenodo account](https://help.zenodo.org/docs/profile/linking-accounts/) to ORCID √°nd GitHub account
3.  In Zenodo, go to [Settings > GitHub](https://sandbox.zenodo.org/account/settings/github/), and "Flip the switch" of your to-be-archived repository.
4.  In GitHub, create a [Release](https://docs.github.com/en/repositories/releasing-projects-on-github/managing-releases-in-a-repository).
5.  Published! 
    a. If needed, edit the Zenodo metadata.
    b. Add the DOI badge to the GitHub repository and the book.

Steps are outlined [here with screenshots](https://coderefinery.github.io/github-without-command-line/doi/)

# YOU MADE IT! {background-image="https://cdn12.picryl.com/photo/2016/12/31/balloons-ballons-colorful-7cca2a-1024.jpg"}
